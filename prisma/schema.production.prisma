generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  users             users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model activity_logs {
  id        String   @id
  action    String
  timestamp DateTime @default(now())
  userId    String?
  clientId  String?
  details   String?
  clients   clients? @relation(fields: [clientId], references: [id])
  users     users?   @relation(fields: [userId], references: [id])

  @@index([action])
  @@index([clientId])
  @@index([timestamp])
  @@index([userId])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model clients {
  id                                               String                   @id
  clientCode                                       String                   @unique
  companyName                                      String
  companyNumber                                    String?                  @unique
  companyType                                      String?
  companyStatus                                    String?
  companyStatusDetail                              String?
  incorporationDate                                DateTime?
  cessationDate                                    DateTime?
  registeredOfficeAddress                          String?
  sicCodes                                         String?
  nextAccountsDue                                  DateTime?
  lastAccountsMadeUpTo                             DateTime?
  nextConfirmationDue                              DateTime?
  lastConfirmationMadeUpTo                         DateTime?
  jurisdiction                                     String?
  hasBeenLiquidated                                Boolean                  @default(false)
  hasCharges                                       Boolean                  @default(false)
  hasInsolvencyHistory                             Boolean                  @default(false)
  officers                                         String?
  personsWithSignificantControl                    String?
  contactName                                      String
  contactEmail                                     String
  contactPhone                                     String?
  contactFax                                       String?
  website                                          String?
  vatNumber                                        String?
  yearEstablished                                  Int?
  numberOfEmployees                                Int?
  annualTurnover                                   Float?
  paperworkFrequency                               String?
  assignedUserId                                   String?
  isActive                                         Boolean                  @default(true)
  notes                                            String?
  createdAt                                        DateTime                 @default(now())
  updatedAt                                        DateTime
  additionalComments                               String?
  annualAccountingScheme                           Boolean                  @default(false)
  businessType                                     String?
  corporationTaxPeriodEnd                          DateTime?
  corporationTaxPeriodStart                        DateTime?
  corporationTaxStatus                             String?                  @default("UNKNOWN")
  ctDueSource                                      String?                  @default("AUTO")
  ctStatusUpdatedBy                                String?
  dormantStatus                                    Boolean                  @default(false)
  flatRatePercentage                               Float?
  handlesAnnualAccounts                            Boolean                  @default(true)
  isVatEnabled                                     Boolean                  @default(false)
  jobCompleted                                     Boolean                  @default(false)
  jobCompletedDate                                 DateTime?
  lastCTStatusUpdate                               DateTime?
  ltdCompanyAssignedUserId                         String?
  manualCTDueOverride                              DateTime?
  nationalInsuranceNumber                          String?
  natureOfBusiness                                 String?
  natureOfTrade                                    String?
  nextCorporationTaxDue                            DateTime?
  nextVatReturnDue                                 DateTime?
  nonLtdCompanyAssignedUserId                      String?
  numberOfPartners                                 Int?
  paperWorkReceived                                Boolean                  @default(false)
  paperWorkReceivedDate                            DateTime?
  partnershipTaxReturn                             Boolean                  @default(false)
  preferredContactMethod                           String?
  previousYearEnded                                DateTime?
  previousYearJobCompletedDate                     DateTime?
  previousYearSA100FiledDate                       DateTime?
  previousYearWorkReceivedDate                     DateTime?
  registeredOfficeAddressCity                      String?
  registeredOfficeAddressCountry                   String?
  registeredOfficeAddressCounty                    String?
  registeredOfficeAddressLine1                     String?
  registeredOfficeAddressLine2                     String?
  registeredOfficeAddressPostCode                  String?
  requiresBookkeeping                              Boolean                  @default(false)
  requiresManagementAccounts                       Boolean                  @default(false)
  requiresPayroll                                  Boolean                  @default(false)
  residentialAddressCountry                        String?
  residentialAddressLine1                          String?
  residentialAddressLine2                          String?
  residentialAddressPostCode                       String?
  sa100Filed                                       Boolean                  @default(false)
  sa100FiledDate                                   DateTime?
  smallCompanyExemption                            Boolean                  @default(false)
  specialInstructions                              String?
  staff                                            String?
  tradingAddressCountry                            String?
  tradingAddressLine1                              String?
  tradingAddressLine2                              String?
  tradingAddressPostCode                           String?
  utrNumber                                        String?
  vatAssignedUserId                                String?
  vatDeregistrationDate                            DateTime?
  vatFrequency                                     String?
  vatQuarterGroup                                  String?
  vatRegistrationDate                              DateTime?
  vatReturnsFrequency                              String?
  vatScheme                                        String?
  workStatus                                       String?
  chaseTeamUserIds                                 String[]                 @default([])
  nextYearEnd                                      DateTime?
  activity_logs                                    activity_logs[]
  users_clients_assignedUserIdTousers              users?                   @relation("clients_assignedUserIdTousers", fields: [assignedUserId], references: [id])
  users_clients_ltdCompanyAssignedUserIdTousers    users?                   @relation("clients_ltdCompanyAssignedUserIdTousers", fields: [ltdCompanyAssignedUserId], references: [id])
  users_clients_nonLtdCompanyAssignedUserIdTousers users?                   @relation("clients_nonLtdCompanyAssignedUserIdTousers", fields: [nonLtdCompanyAssignedUserId], references: [id])
  users_clients_vatAssignedUserIdTousers           users?                   @relation("clients_vatAssignedUserIdTousers", fields: [vatAssignedUserId], references: [id])
  communications                                   communications[]
  email_logs                                       email_logs[]
  ltd_accounts_workflows                           ltd_accounts_workflows[]
  vat_quarters                                     vat_quarters[]

  @@index([assignedUserId])
  @@index([chaseTeamUserIds], type: Gin)
  @@index([companyNumber])
  @@index([companyStatus])
  @@index([companyType])
  @@index([corporationTaxPeriodEnd])
  @@index([corporationTaxStatus])
  @@index([ctDueSource])
  @@index([isActive])
  @@index([ltdCompanyAssignedUserId])
  @@index([nextAccountsDue])
  @@index([nextConfirmationDue])
  @@index([nextCorporationTaxDue])
  @@index([nonLtdCompanyAssignedUserId])
  @@index([vatAssignedUserId])
}

model communications {
  id           String    @id
  type         String
  subject      String
  content      String
  sentAt       DateTime?
  scheduledAt  DateTime?
  clientId     String
  sentByUserId String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime
  clients      clients   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  users        users?    @relation(fields: [sentByUserId], references: [id])

  @@index([clientId])
  @@index([sentAt])
  @@index([sentByUserId])
  @@index([type])
}

model email_logs {
  id             String      @id
  createdAt      DateTime    @default(now())
  updatedAt      DateTime
  recipientEmail String
  recipientName  String?
  subject        String
  content        String
  emailType      String
  status         EmailStatus @default(PENDING)
  sentAt         DateTime?
  deliveredAt    DateTime?
  failedAt       DateTime?
  failureReason  String?
  clientId       String?
  workflowType   String?
  workflowId     String?
  triggeredBy    String
  fromEmail      String?     @default("noreply@numericalz.com")
  fromName       String?     @default("Numericalz")
  clients        clients?    @relation(fields: [clientId], references: [id])
  users          users       @relation(fields: [triggeredBy], references: [id])

  @@index([clientId])
  @@index([createdAt])
  @@index([emailType])
  @@index([recipientEmail])
  @@index([sentAt])
  @@index([status])
  @@index([triggeredBy])
}

model email_templates {
  id          String   @id
  name        String   @unique
  subject     String
  htmlContent String
  textContent String?
  variables   String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model ltd_accounts_workflow_history {
  id                     String                    @id
  ltdAccountsWorkflowId  String
  fromStage              LtdAccountsWorkflowStage?
  toStage                LtdAccountsWorkflowStage
  stageChangedAt         DateTime                  @default(now())
  userId                 String
  userName               String
  userEmail              String
  userRole               String
  notes                  String?
  createdAt              DateTime                  @default(now())
  daysInPreviousStage    Int?
  ltd_accounts_workflows ltd_accounts_workflows    @relation(fields: [ltdAccountsWorkflowId], references: [id])
  users                  users                     @relation(fields: [userId], references: [id])

  @@index([ltdAccountsWorkflowId])
}

model ltd_accounts_workflows {
  id                              String                          @id
  clientId                        String
  filingPeriodStart               DateTime
  filingPeriodEnd                 DateTime
  accountsDueDate                 DateTime
  ctDueDate                       DateTime
  csDueDate                       DateTime
  currentStage                    LtdAccountsWorkflowStage        @default(PAPERWORK_PENDING_CHASE)
  assignedUserId                  String?
  isCompleted                     Boolean                         @default(false)
  createdAt                       DateTime                        @default(now())
  updatedAt                       DateTime                        @default(now())
  chaseStartedDate                DateTime?
  chaseStartedByUserId            String?
  chaseStartedByUserName          String?
  paperworkReceivedDate           DateTime?
  paperworkReceivedByUserId       String?
  paperworkReceivedByUserName     String?
  workStartedDate                 DateTime?
  workStartedByUserId             String?
  workStartedByUserName           String?
  managerDiscussionDate           DateTime?
  managerDiscussionByUserId       String?
  managerDiscussionByUserName     String?
  partnerReviewDate               DateTime?
  partnerReviewByUserId           String?
  partnerReviewByUserName         String?
  reviewCompletedDate             DateTime?
  reviewCompletedByUserId         String?
  reviewCompletedByUserName       String?
  sentToClientDate                DateTime?
  sentToClientByUserId            String?
  sentToClientByUserName          String?
  clientApprovedDate              DateTime?
  clientApprovedByUserId          String?
  clientApprovedByUserName        String?
  partnerApprovedDate             DateTime?
  partnerApprovedByUserId         String?
  partnerApprovedByUserName       String?
  filedDate                       DateTime?
  filedByUserId                   String?
  filedByUserName                 String?
  clientSelfFilingDate            DateTime?
  clientSelfFilingByUserId        String?
  clientSelfFilingByUserName      String?
  filedToCompaniesHouseDate       DateTime?
  filedToCompaniesHouseByUserId   String?
  filedToCompaniesHouseByUserName String?
  filedToHMRCDate                 DateTime?
  filedToHMRCByUserId             String?
  filedToHMRCByUserName           String?
  ltd_accounts_workflow_history   ltd_accounts_workflow_history[]
  users                           users?                          @relation(fields: [assignedUserId], references: [id])
  clients                         clients                         @relation(fields: [clientId], references: [id])

  @@index([assignedUserId])
  @@index([clientId])
  @@index([currentStage])
  @@index([filingPeriodEnd])
}

model notifications {
  id        String   @id
  type      String
  title     String
  message   String
  isRead    Boolean  @default(false)
  data      String?
  userId    String
  createdAt DateTime @default(now())
  users     users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([isRead])
  @@index([type])
  @@index([userId])
}

model sessions {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  users        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model settings {
  id        String   @id
  key       String   @unique
  value     String
  updatedAt DateTime
  createdAt DateTime @default(now())
}

model user_settings {
  id                                           String   @id
  userId                                       String   @unique
  defaultAssigneeId                            String?
  emailNotifications                           Boolean  @default(true)
  smsNotifications                             Boolean  @default(false)
  createdAt                                    DateTime @default(now())
  updatedAt                                    DateTime
  ltdWorkflowAutomationEnabled                 Boolean  @default(false)
  users_user_settings_defaultAssigneeIdTousers users?   @relation("user_settings_defaultAssigneeIdTousers", fields: [defaultAssigneeId], references: [id])
  users_user_settings_userIdTousers            users    @relation("user_settings_userIdTousers", fields: [userId], references: [id], onDelete: Cascade)
}

model users {
  id                                                   String                          @id
  email                                                String                          @unique
  name                                                 String
  password                                             String
  role                                                 String                          @default("STAFF")
  isActive                                             Boolean                         @default(true)
  lastLoginAt                                          DateTime?
  createdAt                                            DateTime                        @default(now())
  updatedAt                                            DateTime
  otpCode                                              String?
  otpExpiresAt                                         DateTime?
  otpAttempts                                          Int                             @default(0)
  lastOtpSentAt                                        DateTime?
  isOtpVerified                                        Boolean                         @default(false)
  accounts                                             accounts[]
  activity_logs                                        activity_logs[]
  clients_clients_assignedUserIdTousers                clients[]                       @relation("clients_assignedUserIdTousers")
  clients_clients_ltdCompanyAssignedUserIdTousers      clients[]                       @relation("clients_ltdCompanyAssignedUserIdTousers")
  clients_clients_nonLtdCompanyAssignedUserIdTousers   clients[]                       @relation("clients_nonLtdCompanyAssignedUserIdTousers")
  clients_clients_vatAssignedUserIdTousers             clients[]                       @relation("clients_vatAssignedUserIdTousers")
  communications                                       communications[]
  email_logs                                           email_logs[]
  ltd_accounts_workflow_history                        ltd_accounts_workflow_history[]
  ltd_accounts_workflows                               ltd_accounts_workflows[]
  notifications                                        notifications[]
  sessions                                             sessions[]
  user_settings_user_settings_defaultAssigneeIdTousers user_settings[]                 @relation("user_settings_defaultAssigneeIdTousers")
  user_settings_user_settings_userIdTousers            user_settings?                  @relation("user_settings_userIdTousers")
  vat_quarters                                         vat_quarters[]
  vat_workflow_history                                 vat_workflow_history[]

  @@index([email])
  @@index([isActive])
  @@index([otpCode])
  @@index([otpExpiresAt])
  @@index([role])
}

model vat_quarters {
  id                          String                 @id
  clientId                    String
  quarterPeriod               String
  quarterStartDate            DateTime
  quarterEndDate              DateTime
  filingDueDate               DateTime
  quarterGroup                String
  currentStage                VATWorkflowStage       @default(PAPERWORK_PENDING_CHASE)
  isCompleted                 Boolean                @default(false)
  assignedUserId              String?
  chaseStartedDate            DateTime?
  chaseStartedByUserId        String?
  chaseStartedByUserName      String?
  paperworkReceivedDate       DateTime?
  paperworkReceivedByUserId   String?
  paperworkReceivedByUserName String?
  workStartedDate             DateTime?
  workStartedByUserId         String?
  workStartedByUserName       String?
  workFinishedDate            DateTime?
  workFinishedByUserId        String?
  workFinishedByUserName      String?
  sentToClientDate            DateTime?
  sentToClientByUserId        String?
  sentToClientByUserName      String?
  clientApprovedDate          DateTime?
  clientApprovedByUserId      String?
  clientApprovedByUserName    String?
  filedToHMRCDate             DateTime?
  filedToHMRCByUserId         String?
  filedToHMRCByUserName       String?
  createdAt                   DateTime               @default(now())
  updatedAt                   DateTime
  users                       users?                 @relation(fields: [assignedUserId], references: [id])
  clients                     clients                @relation(fields: [clientId], references: [id], onDelete: Cascade)
  vat_workflow_history        vat_workflow_history[]

  @@unique([clientId, quarterPeriod])
}

model vat_workflow_history {
  id                  String            @id
  vatQuarterId        String
  fromStage           VATWorkflowStage?
  toStage             VATWorkflowStage
  stageChangedAt      DateTime
  daysInPreviousStage Int?
  userId              String?
  userName            String
  userEmail           String
  userRole            String
  notes               String?
  createdAt           DateTime          @default(now())
  users               users?            @relation(fields: [userId], references: [id])
  vat_quarters        vat_quarters      @relation(fields: [vatQuarterId], references: [id], onDelete: Cascade)
}

model verificationtokens {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum EmailStatus {
  PENDING
  SENT
  DELIVERED
  FAILED
  BOUNCED
}

enum LtdAccountsWorkflowStage {
  WAITING_FOR_YEAR_END
  PAPERWORK_PENDING_CHASE
  PAPERWORK_CHASED
  PAPERWORK_RECEIVED
  WORK_IN_PROGRESS
  DISCUSS_WITH_MANAGER
  REVIEW_BY_PARTNER
  REVIEW_DONE_HELLO_SIGN
  SENT_TO_CLIENT_HELLO_SIGN
  APPROVED_BY_CLIENT
  SUBMISSION_APPROVED_PARTNER
  FILED_TO_COMPANIES_HOUSE
  FILED_TO_HMRC
  FILED_CH_HMRC
  CLIENT_SELF_FILING
  REVIEWED_BY_MANAGER
  REVIEWED_BY_PARTNER
}

enum VATWorkflowStage {
  PAPERWORK_PENDING_CHASE
  PAPERWORK_CHASED
  PAPERWORK_RECEIVED
  WORK_IN_PROGRESS
  QUERIES_PENDING
  REVIEW_PENDING_MANAGER
  REVIEW_PENDING_PARTNER
  EMAILED_TO_PARTNER
  EMAILED_TO_CLIENT
  CLIENT_APPROVED
  FILED_TO_HMRC
  REVIEWED_BY_MANAGER
  REVIEWED_BY_PARTNER
  WAITING_FOR_QUARTER_END
}
